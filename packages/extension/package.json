{
  "name": "leapmode",
  "displayName": "Leap Mode",
  "publisher": "chuanqisun",
  "author": {
    "name": "Chuánqí Sun",
    "email": "git@chuanqisun.com"
  },
  "icon": "assets/leap-logo-4x.png",
  "galleryBanner": {
    "color": "#212121",
    "theme": "dark"
  },
  "description": "An ergonomic keymap",
  "version": "0.0.14",
  "engines": {
    "vscode": "^1.45.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/chuanqisun/leap.git"
  },
  "categories": [
    "Keymaps"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Leap Mode",
      "properties": {
        "leapMode.state": {
          "enum": [
            "off",
            "on"
          ],
          "default": "off",
          "description": "The current state of the leap mode keybindings"
        }
      }
    },
    "commands": [
      {
        "command": "leapMode.toggle",
        "title": "Toggle on/off",
        "category": "Leap Mode"
      },
      {
        "command": "leapMode.turnOn",
        "title": "Turn on",
        "category": "Leap Mode"
      },
      {
        "command": "leapMode.turnOff",
        "title": "Turn off",
        "category": "Leap Mode"
      },
      {
        "command": "leapMode.cursorParagraphUp",
        "title": "Move cursor up by one paragraph",
        "category": "Leap Mode"
      },
      {
        "command": "leapMode.cursorParagraphUpSelect",
        "title": "Move cursor up by one paragraph while selecting",
        "category": "Leap Mode"
      },
      {
        "command": "leapMode.cursorParagraphUp",
        "title": "Move cursor down by one paragraph",
        "category": "Leap Mode"
      },
      {
        "command": "leapMode.cursorParagraphUpSelect",
        "title": "Move cursor down by one paragraph while selecting",
        "category": "Leap Mode"
      }
    ],
    "keybindings": [
      {
        "key": "capslock",
        "command": "leapMode.toggle"
      },
      {
        "key": "ctrl+shift+insert",
        "command": "leapMode.turnOn"
      },
      {
        "key": "ctrl+shift+delete",
        "command": "leapMode.turnOff"
      },
      {
        "key": "i",
        "command": "cursorUp",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+i",
        "command": "cursorUpSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "k",
        "command": "cursorDown",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+k",
        "command": "cursorDownSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+i",
        "command": "leapMode.cursorParagraphUp",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+i",
        "command": "leapMode.cursorParagraphUpSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+up",
        "command": "leapMode.cursorParagraphUp",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+up",
        "command": "leapMode.cursorParagraphUpSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+k",
        "command": "leapMode.cursorParagraphDown",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+k",
        "command": "leapMode.cursorParagraphDownSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+down",
        "command": "leapMode.cursorParagraphDown",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+down",
        "command": "leapMode.cursorParagraphDownSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "[",
        "command": "cursorPageUp",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+[",
        "command": "cursorPageUpSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "]",
        "command": "cursorPageDown",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+]",
        "command": "cursorPageDownSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+[",
        "command": "cursorTop",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+pageup",
        "command": "cursorTop",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+[",
        "command": "cursorTopSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+pageup",
        "command": "cursorTopSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+]",
        "command": "cursorBottom",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+pagedown",
        "command": "cursorBottom",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+]",
        "command": "cursorBottomSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+pagedown",
        "command": "cursorBottomSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "j",
        "command": "cursorLeft",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+j",
        "command": "cursorLeftSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "l",
        "command": "cursorRight",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+l",
        "command": "cursorRightSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+j",
        "command": "cursorWordLeft",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+j",
        "command": "cursorWordLeftSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+l",
        "command": "cursorWordRight",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+l",
        "command": "cursorWordRightSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "u",
        "command": "cursorHome",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+u",
        "command": "cursorLineStart",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+home",
        "command": "cursorLineStart",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+u",
        "command": "cursorHomeSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+home",
        "command": "cursorHomeSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+u",
        "command": "cursorLineStartSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+home",
        "command": "cursorLineStartSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "o",
        "command": "cursorEnd",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+o",
        "command": "cursorLineEnd",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+end",
        "command": "cursorLineEnd",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+o",
        "command": "cursorEndSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+end",
        "command": "cursorEndSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+o",
        "command": "cursorLineEndSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+end",
        "command": "cursorLineEndSelect",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+alt+j",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+alt+l",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus && leapMode.state == 'on'"
      },
      {
        "key": "alt+i",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly && leapMode.state == 'on'"
      },
      {
        "key": "alt+k",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly && leapMode.state == 'on'"
      },
      {
        "key": "shift+alt+i",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly && leapMode.state == 'on'"
      },
      {
        "key": "shift+alt+k",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly && leapMode.state == 'on'"
      },
      {
        "key": "i",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "k",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "i",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen && leapMode.state == 'on'"
      },
      {
        "key": "k",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+i",
        "command": "list.focusUp",
        "when": "explorerViewletFocus && listFocus && !inputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+k",
        "command": "list.focusDown",
        "when": "explorerViewletFocus && listFocus && !inputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+l",
        "command": "list.expand",
        "when": "explorerViewletFocus && listFocus && !inputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+j",
        "command": "list.collapse",
        "when": "explorerViewletFocus && listFocus && !inputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+up",
        "command": "list.focusUp",
        "when": "explorerViewletFocus && listFocus && !inputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+down",
        "command": "list.focusDown",
        "when": "explorerViewletFocus && listFocus && !inputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+right",
        "command": "list.expand",
        "when": "explorerViewletFocus && listFocus && !inputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+left",
        "command": "list.collapse",
        "when": "explorerViewletFocus && listFocus && !inputFocus && leapMode.state == 'on'"
      },
      {
        "key": "shift+backspace",
        "command": "deleteRight",
        "when": "textInputFocus && leapMode.state == 'on'"
      },
      {
        "key": "ctrl+shift+backspace",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly && leapMode.state == 'on'"
      },
      {
        "key": "alt+1",
        "command": "workbench.action.terminal.focusAtIndex1",
        "when": "terminalFocus && leapMode.state == 'on'"
      },
      {
        "key": "alt+2",
        "command": "workbench.action.terminal.focusAtIndex2",
        "when": "terminalFocus && leapMode.state == 'on'"
      },
      {
        "key": "alt+3",
        "command": "workbench.action.terminal.focusAtIndex3",
        "when": "terminalFocus && leapMode.state == 'on'"
      },
      {
        "key": "alt+4",
        "command": "workbench.action.terminal.focusAtIndex4",
        "when": "terminalFocus && leapMode.state == 'on'"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.45.0",
    "@types/glob": "^7.1.1",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.11.0",
    "eslint": "^6.8.0",
    "@typescript-eslint/parser": "^2.30.0",
    "@typescript-eslint/eslint-plugin": "^2.30.0",
    "glob": "^7.1.6",
    "mocha": "^7.1.2",
    "typescript": "^3.8.3",
    "vscode-test": "^1.3.0"
  }
}
